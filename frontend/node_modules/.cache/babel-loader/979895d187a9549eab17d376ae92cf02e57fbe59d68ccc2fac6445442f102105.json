{"ast":null,"code":"import liff from \"@line/liff\";\nimport { mapState } from 'vuex';\nimport CommentItem from './CommentItem.vue';\nexport default {\n  name: 'CommentSection',\n  components: {\n    CommentItem\n  },\n  data() {\n    return {\n      user: '',\n      inputData: '',\n      currentUserData: {},\n      isLoggedIn: false\n    };\n  },\n  methods: {\n    liffLogin() {\n      liff.init({\n        liffId: '2000362113-Dd5JOa2e'\n      }).then(() => {\n        if (!liff.isLoggedIn()) {\n          liff.login();\n        }\n      }).catch(err => {\n        this.message = \"LIFF init failed.\";\n        this.error = `${err}`;\n      });\n    },\n    addNewComment() {\n      if (this.inputData) {\n        let commentData = {\n          ...this.currentUserData,\n          commentDate: new Date().toLocaleString(\"zh-TW\", {\n            timeZone: \"Asia/Taipei\"\n          }),\n          commentText: this.inputData\n        };\n        this.$store.dispatch('sendComment', commentData);\n        this.inputData = \"\";\n      }\n    }\n  },\n  computed: {\n    ...mapState(['comments'])\n  },\n  mounted() {\n    liff.init({\n      liffId: '2000362113-Dd5JOa2e'\n    }).then(() => {\n      if (liff.isLoggedIn()) {\n        this.isLoggedIn = true;\n        liff.getProfile().then(pf => {\n          this.isLoggedIn = true;\n          this.currentUserData = pf;\n        }).catch(err => {\n          console.log(\"error\", err);\n        });\n      }\n    });\n    this.$store.dispatch('getComment');\n  },\n  watch: {\n    inputData(newVal, oldVal) {\n      if (newVal.includes(\"*\") || newVal.includes(\";\") || newVal.includes(\"'\")) {\n        this.inputData = oldVal;\n      }\n    }\n  }\n};","map":{"version":3,"names":["liff","mapState","CommentItem","name","components","data","user","inputData","currentUserData","isLoggedIn","methods","liffLogin","init","liffId","then","login","catch","err","message","error","addNewComment","commentData","commentDate","Date","toLocaleString","timeZone","commentText","$store","dispatch","computed","mounted","getProfile","pf","console","log","watch","newVal","oldVal","includes"],"sources":["src/components/Home/CommentSection.vue"],"sourcesContent":["<template>\r\n    <section class=\"comment-area\">       \r\n        <div class=\"mt-5  area container-sm \">\r\n            <div class=\"row p-0\">\r\n                <h1><div class=\"text-center fs-3\">Comment . . .</div></h1>\r\n            </div>\r\n            <div class=\"suggestTodo h-100 row \">\r\n                <div class=\"showlist mt-4 h-75\">\r\n                    <ul>\r\n                        <CommentItem v-for=\"comment in comments\" :key=\"comment.commentId\" :comment=\"comment\" :currentUser=\"currentUserData.userId\"/>\r\n                    </ul>\r\n                </div>\r\n                <div v-if=\"isLoggedIn\" class=\"d-flex justify-content-center input-box\">\r\n                    <div class=\"input-group input-group-lg shadow-sm mx-5 bg-body-tertiary rounded\" >\r\n                        <textarea\r\n                            type=\"text\" \r\n                            class=\"form-control fs-5 \" \r\n                            aria-label=\"Sizing example input\" \r\n                            aria-describedby=\"inputGroup-sizing-lg\"\r\n                            placeholder=\"your input is always good . . .\" \r\n                            maxlength=\"800\"\r\n                            :rows=\"Math.min(Math.max(Math.max(inputData.split('\\n').length, 2), 2), 9)\"\r\n                            v-model=\"inputData\"\r\n                        ></textarea>\r\n                        <button @click=\"addNewComment\"><span class=\"input-group-text input-title\" id=\"inputGroup-sizing-lg\"><i class=\"bi bi-send fs-4\"></i></span></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <button v-if=\"!isLoggedIn\" type=\"button\" class=\"btn btn-success sticky-bottom\" @click=\"liffLogin\">\r\n                <i class=\"bi bi-line mx-3 fs-3\"></i>\r\n                <span class=\"me-2 fs-5 lh-lg fw-semibold\">Login to comment</span>\r\n            </button>\r\n        </div>\r\n        \r\n        \r\n    </section>\r\n</template>\r\n\r\n<script>\r\nimport liff from \"@line/liff\";\r\nimport { mapState } from 'vuex'\r\nimport CommentItem from './CommentItem.vue';\r\nexport default {\r\n    name:'CommentSection',\r\n    components:{\r\n        CommentItem\r\n    },\r\n    data() {\r\n        return {\r\n            user:'',\r\n            inputData:'',\r\n            currentUserData:{},\r\n            isLoggedIn:false\r\n        };\r\n    },\r\n    methods:{\r\n        liffLogin() {\r\n            liff.init({liffId:'2000362113-Dd5JOa2e'})\r\n            .then(()=> {\r\n                if (!liff.isLoggedIn()) {\r\n                    liff.login();\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                this.message = \"LIFF init failed.\";\r\n                this.error = `${err}`;\r\n            });\r\n        },\r\n        addNewComment() {\r\n            if (this.inputData) {\r\n                let commentData = {\r\n                    ...this.currentUserData,\r\n                    commentDate: new Date().toLocaleString(\"zh-TW\", { timeZone: \"Asia/Taipei\" }),\r\n                    commentText: this.inputData\r\n                };\r\n                this.$store.dispatch('sendComment',commentData);\r\n                this.inputData = \"\";\r\n            }\r\n        }\r\n    },\r\n    computed:{\r\n        ...mapState(['comments']),\r\n    },\r\n    mounted(){\r\n        liff.init({liffId:'2000362113-Dd5JOa2e'})\r\n        .then(() => {\r\n            if (liff.isLoggedIn()) {\r\n                    this.isLoggedIn = true\r\n                    liff.getProfile()\r\n                    .then((pf) => {\r\n                        this.isLoggedIn = true\r\n                        this.currentUserData = pf\r\n                    })\r\n                    .catch((err) => {\r\n                        console.log(\"error\",err)\r\n                    })\r\n                }\r\n        });\r\n        this.$store.dispatch('getComment');\r\n    },\r\n    watch:{\r\n        inputData(newVal,oldVal){\r\n            if(newVal.includes(\"*\") || newVal.includes(\";\") || newVal.includes(\"'\")){\r\n                this.inputData = oldVal;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n    \r\n    button {\r\n        border: none;\r\n    }\r\n    .area {\r\n        max-width: 680px;\r\n    }\r\n    .input-title{\r\n        font-weight: 600;\r\n        \r\n    }\r\n\r\n    h1 {\r\n        /* color: #60a5fa; */\r\n        font-size: 1.5rem;\r\n        font-weight: 700;\r\n        font-family: inherit;\r\n        line-height: 1.1;\r\n        margin-top: 2rem;\r\n    }\r\n    .input-box{\r\n        height: 13%;\r\n    }\r\n      .background {\r\n          width: 60%;\r\n          height: 800px;    \r\n          border-radius: 1rem;\r\n          box-shadow: inset 0 0 10px rgba(8, 8, 8,0.1); \r\n\r\n      }\r\n    .comment-area{\r\n        min-height: 100vh;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n\r\n    .showlist{\r\n        height: 80%;\r\n        overflow-y: auto;\r\n    }\r\n\r\n    @media (min-width: 768px) {\r\n    \r\n    \r\n\r\n\r\n\r\n\r\n\r\n    h2{\r\n        margin: 2rem 0 1rem 0;\r\n        font-weight: 900;\r\n        font-size: 2rem;\r\n        \r\n    }\r\n    ul{\r\n        padding: 0;\r\n    }\r\n    }\r\n\r\n\r\n    @media (max-width:768px) {\r\n        .background {\r\n            width: 99%;\r\n        }\r\n\r\n        .input-box{\r\n            height: 10%;\r\n            \r\n        }\r\n\r\n\r\n        /* h2{\r\n\r\n            margin: 2rem 0 1rem 1rem;\r\n            font-weight: 900;\r\n            font-size: 2rem;\r\n        \r\n        }\r\n\r\n        .todoinput{\r\n            display: flex;\r\n            flex-direction: column;\r\n            justify-content: space-between;\r\n            height: 150px;\r\n        }\r\n        ul{\r\n           padding: 0;\r\n    }\r\n        .showlist{\r\n            height: 70%;\r\n            overflow-y: auto;\r\n            margin: 1rem 0;\r\n        } */\r\n        /* .suggestTodo {\r\n            display: flex;\r\n            flex-direction: column;\r\n            width:70vw;\r\n            height: 70%;\r\n            background-color:#fff;\r\n            border-radius: 2rem;\r\n            padding: 0 0 0 0;\r\n            border: 2px solid #ccc;\r\n            box-shadow: 0 0 10px rgba(0,0,0,.1);\r\n        }    */\r\n        /* input {\r\n            width: 90%;\r\n            border-radius: 2rem;\r\n            height: 3rem;\r\n            opacity: 1;\r\n            padding-left: 20px;\r\n            margin: auto auto\r\n        }     */\r\n        /* ul {\r\n            height:100%;\r\n            padding: 0 0 0 20px;\r\n            \r\n        }\r\n        label[for=\"todo\"] {\r\n            font-size: 1.3rem;\r\n            font-weight: 600;\r\n            margin:0 0 10px 1rem\r\n\r\n            \r\n\r\n        }\r\n\r\n        .todocontent{\r\n            font-size:30px;\r\n            font-weight: 600;\r\n            display:inline-block;\r\n            width:350px\r\n        }\r\n\r\n        .deleteButton{\r\n            font-size:18px;\r\n            border: 2px solid rgb(204, 102, 102);\r\n            border-radius: 12px;\r\n            height: 40px;\r\n            width: 100px;\r\n            font-weight: 600;\r\n        }\r\n\r\n        .deleteButton:hover {\r\n            background-color: rgb(204, 102, 102);\r\n        } */\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n</style>"],"mappings":"AAuCA,OAAAA,IAAA;AACA,SAAAC,QAAA;AACA,OAAAC,WAAA;AACA;EACAC,IAAA;EACAC,UAAA;IACAF;EACA;EACAG,KAAA;IACA;MACAC,IAAA;MACAC,SAAA;MACAC,eAAA;MACAC,UAAA;IACA;EACA;EACAC,OAAA;IACAC,UAAA;MACAX,IAAA,CAAAY,IAAA;QAAAC,MAAA;MAAA,GACAC,IAAA;QACA,KAAAd,IAAA,CAAAS,UAAA;UACAT,IAAA,CAAAe,KAAA;QACA;MACA,GACAC,KAAA,CAAAC,GAAA;QACA,KAAAC,OAAA;QACA,KAAAC,KAAA,MAAAF,GAAA;MACA;IACA;IACAG,cAAA;MACA,SAAAb,SAAA;QACA,IAAAc,WAAA;UACA,QAAAb,eAAA;UACAc,WAAA,MAAAC,IAAA,GAAAC,cAAA;YAAAC,QAAA;UAAA;UACAC,WAAA,OAAAnB;QACA;QACA,KAAAoB,MAAA,CAAAC,QAAA,gBAAAP,WAAA;QACA,KAAAd,SAAA;MACA;IACA;EACA;EACAsB,QAAA;IACA,GAAA5B,QAAA;EACA;EACA6B,QAAA;IACA9B,IAAA,CAAAY,IAAA;MAAAC,MAAA;IAAA,GACAC,IAAA;MACA,IAAAd,IAAA,CAAAS,UAAA;QACA,KAAAA,UAAA;QACAT,IAAA,CAAA+B,UAAA,GACAjB,IAAA,CAAAkB,EAAA;UACA,KAAAvB,UAAA;UACA,KAAAD,eAAA,GAAAwB,EAAA;QACA,GACAhB,KAAA,CAAAC,GAAA;UACAgB,OAAA,CAAAC,GAAA,UAAAjB,GAAA;QACA;MACA;IACA;IACA,KAAAU,MAAA,CAAAC,QAAA;EACA;EACAO,KAAA;IACA5B,UAAA6B,MAAA,EAAAC,MAAA;MACA,IAAAD,MAAA,CAAAE,QAAA,SAAAF,MAAA,CAAAE,QAAA,SAAAF,MAAA,CAAAE,QAAA;QACA,KAAA/B,SAAA,GAAA8B,MAAA;MACA;IACA;EACA;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}